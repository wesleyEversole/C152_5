Token ;
Token define
Token deriv
Token (
Token lambda
Token (
Token poly
Token var
Token )
Token (
Token let*
Token (
Token (
Token terms
Token (
Token terminize
Token poly
Token )
Token )
Token ;
Token deriv-term
Token Space
Token lambda
Token (
Token term
Token )
Token Space
Token cond
Token (
Token (
Token null?
Token term
Token )
Token  '()
Token )
Token (
Token (
Token not
Token (
Token member?
Token var
Token term
Token )
Token )
Token  '(0)
Token )
Token Space
Token (
Token not
Token (
Token member?
Token '^
Token term
Token )
Token )
Token (
Token upto
Token var
Token term
Token )
Token )
Token ;
Token else
Token (
Token deriv-term-expo
Token term
Token var
Token )
Token )
Token Space
Token )
Token )
Token Space
Token diff
Token (
Token map
Token deriv-term
Token terms
Token )
Token )
Token )
Token Space
Token remove-trailing-plus
Token (
Token polyize
Token diff
Token )
Token )
Token ;
Token )
Token )
Token Space
Token define
Token terminize
Token (
Token lambda
Token (
Token poly
Token )
Token (
Token cond
Token (
Token (
Token null?
Token poly
Token )
Token  '()
Token )
Token (
Token else
Token (
Token cons
Token (
Token upto
Token '+
Token poly
Token )
Token (
Token terminize
Token (
Token after
Token '+
Token poly
Token )
Token )
Token )
Token )
Token )
End Of File
Backend printing
Printing Tree
(
 define
 deriv
 (
  lambda
  (
   poly
   var
  )
  (
   let*
   (
    (
     terms
     (
      terminize
      poly
     )
     (
      deriv-term
      (
       lambda
       (
        term
       )
       (
        cond
        (
         (
          null?
          term
         )
          '()
        )
        (
         (
          not
          (
           member?
           var
           term
          )
           '(0)
         )
         (
          (
           not
           (
            member?
            '^
            term
           )
           (
            upto
            var
            term
           )
           (
            else
            (
             deriv-term-expo
             term
             var
            )
            (
             diff
             (
              map
              deriv-term
              terms
             )
             (
              remove-trailing-plus
              (
               polyize
               diff
              )
              (
               define
               terminize
               (
                lambda
                (
                 poly
                )
                (
                 cond
                 (
                  (
                   null?
                   poly
                  )
                   '()
                 )
                 (
                  else
                  (
                   cons
                   (
                    upto
                    '+
                    poly
                   )
                   (
                    terminize
                    (
                     after
                     '+
                     poly
                    )
Printing End of Tree

Printing SymbolTable
 '()
 '(0)
'+
'^
after
cons
deriv
deriv-term
deriv-term-expo
diff
map
member?
not
null?
poly
polyize
remove-trailing-plus
term
terminize
terms
upto
var
