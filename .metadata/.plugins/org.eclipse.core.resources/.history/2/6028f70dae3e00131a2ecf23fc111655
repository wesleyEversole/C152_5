package frontend;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;
import java.util.Stack;

public class CSScanner {
	final static String[] RPLACE = { "(", ")" };
	private Stack<Token> symbols;
	private Scanner s;
	private String currentLine;

	public CSScanner(String fileName) {
		s = null;
		//symbols = new Stack<Token>();
		try {
			s = new Scanner(new File(fileName));
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
		}


	public Token nextToken() {
		Token token =null;
		String tString = "";
		if(s.hasNext()) {
			currentLine = s.nextLine();
			currentLine = currentLine.trim();
			System.out.println(currentLine);
			for (int i = 0; i < currentLine.length(); i++) {
				char c = currentLine.charAt(i);
				// System.out.println();
				if (c == '(' || c == ')') {
					// System.out.println("Found: " + c);
				}
				if (c == ';') {
					tString += Character.toString(c);
				}
				if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {
					// System.out.println("letter");
					tString += Character.toString(c);
				}
				if ((c >= 0) && (c <= 9)) {
					// System.out.println("Is Number: " + c);
				}
			}

			if (!(tString.isEmpty()||tString.startsWith(";"))) {
				System.out.println("Pushing: " + tString);
				token=new Token(tString);
			}else {
				token= nextToken();
			}
			
		}
		else {
			token = new Token("");
		}
		return token;
	}
}

/*
 * need to make a FileReader and a BufferedReader to deal with the input file
 */
/*
 * public Scan(String fName){ symbols = new Stack<Token>(); String str = "";
 * Scanner s = null; try { s = new Scanner(new File(fName)); } catch
 * (FileNotFoundException e) { // TODO Auto-generated catch block
 * e.printStackTrace(); } int n=1; while(s.hasNext()) { str = s.nextLine();
 * System.out.println("current line #" + n + ": "+str); //may not want to
 * replace the ( and ) str = str.replace(RPLACE[0],""); str =
 * str.replace(RPLACE[1],""); str = str.trim(); String[] strSplit
 * =str.split(" "); for(String i:strSplit ) { if(i.equals(";")) { break; }
 * if(!i.equals("	")) { Token t = new Token(i);
 * System.out.println("token= "+t.getValue() +" type = " + t.getType()); } }
 * n++; }
 */