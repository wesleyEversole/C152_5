package frontend;

import intermediate.*;

public class Parse {
	private CSScanner scan;
	private TopLvlItem pro;

	public Parse(String s) {
		init(new CSScanner(s));

	}

	private Parse(CSScanner scan) {
		init(scan);
	}

	// builds the tree and symbol table
	// make a tree map first.
	// once the tree map is made make the stack the treemap will sit on
	// logic for the token type will be need... need to find out all the meaning
	// for the token types.
	// from the stack the tree can be made from the map.

	private void init(CSScanner scan) {
		this.scan = scan;
		Token tkn = new Token(null);

	}

	public TopLvlItem buildTopLvl() {
		buildItem(scan.nextToken(), pro.getMT().getNode());
		return pro;
	}

	private void buildItem(Token t, Node n) {
		if (t.getValue().equals("(")) {
			n.setLeft(new Node());
		}else if(t.getValue().equals(")")){
			return;
		}else {
			n.setName(t.getValue());
			//fill symbol table here
		}
	}

}
